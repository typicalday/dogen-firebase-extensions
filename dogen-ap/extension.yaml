# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: dogen-ap  # Identifier for your extension
version: 0.0.5  # Follow semver versioning
specVersion: v1beta  # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Dogen Application Platform

# Brief description of the task your extension performs (~1 sentence)
description: >-
  Installs the Dogen Application Platform, allowing you to manage your data like a pro! 
  For more information visit https://www.dogen.io.

license: Apache-2.0  # https://spdx.org/licenses/

# Public URL for the source code of your extension
sourceUrl: https://github.com/typicalday/dogen-firebase-extensions/dogen-ap

# Specify whether a paid-tier billing plan is required to use your extension.
# Learn more in the docs: https://firebase.google.com/docs/extensions/reference/extension-yaml#billing-required-field
billingRequired: true

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field

# In a `roles` field, list any IAM access roles required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#roles-field
roles:
  - role: datastore.owner
    reason: Required to read and create documents in Firestore.
  - role: firebaseauth.admin
    reason: Required to manage Authentication users.
      
# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: onUserCreate
    type: firebaseextensions.v1beta.function
    description: >-
      Auth triggered function that creates a new accounts collection document for the user.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.create
        resource: projects/${PROJECT_ID}
      runtime: "nodejs18"
  - name: onUserDelete
    type: firebaseextensions.v1beta.function
    description: >-
      Auth triggered function that deletes an existing accounts collection document from the deleted user.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.delete
        resource: projects/${PROJECT_ID}
      runtime: "nodejs18"
  - name: runInstall
    type: firebaseextensions.v1beta.function
    description: >-
      Cloud task triggered function which handles registration and backfilling of users.
    properties:
      location: ${LOCATION}
      taskQueueTrigger: {}
      runtime: "nodejs18"
  - name: onAccountCreate
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore triggered function which creates an Auth user from the corresponding accounts document.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.create
        resource: projects/${PROJECT_ID}/databases/(default)/documents/dogen_application_accounts/{userId}
      runtime: "nodejs18"
  - name: onAccountUpdate
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore triggered function which updates Auth user details from the corresponding accounts document changes.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.update
        resource: projects/${PROJECT_ID}/databases/(default)/documents/dogen_application_accounts/{userId}
      runtime: "nodejs18"
  - name: onGenerationWrite
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore triggered function which triggers a Dogen AP Generation.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${PROJECT_ID}/databases/(default)/documents/dogen_application_generations/{generationId}
      runtime: "nodejs18"
  - name: processJob
    type: firebaseextensions.v1beta.function
    description: >-
      Https triggered function which runs background jobs for the client.
    properties:
      location: ${LOCATION}
      httpsTrigger: {}
      runtime: "nodejs18"
  - name: updateGenerationWebhook
    type: firebaseextensions.v1beta.function
    description: >-
      Https triggered function which acts a webhook to update the generation status from Dogen services.
    properties:
      location: ${LOCATION}
      httpsTrigger: {}
      runtime: "nodejs18"

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: DOGEN_ACCOUNT_EMAIL
    label: Registration Email / Dogen Account Email (Required)
    description: >-
      The email address associated with your Dogen account.  If you do not have an 
      existing Dogen account, provide the registration email address.
    type: string
    required: true

  - param: DOGEN_INVITATION_CODE
    label: Dogen Invitation Code (Optional)
    description: >-
      Dogen is in private alpha. If you do not provide an invitation code, you will be
      added to the waitlist.  We will send you a confirmation email shortly, and another once 
      we are ready to onboard you.
    type: string
    required: false

  - param: DOGEN_API_KEY
    label: Dogen API Key (Optional)
    description: >-
      The API Key to use when communicating with the Dogen service.  You can
      leave it blank if you're just trying the service.  Once we issue you an API 
      key in the future, you can update the extension configuration.  This uses
      secret manager for storage, it may have its own costs.
    type: secret
    required: false

  - param: LOCATION
    label: Cloud Location (Required)
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true

  - param: ADMIN_USER_EMAIL
    label: Admin User Email (Required)
    description: >-
      The email address for an existing Firebase Auth User which will be granted 
      the 'admin' Dogen role. This is essentially your first Dogen application 
      user.
    type: string
    required: true

  - param: BACKFILL_EXISTING_USERS
    label: Backfill Existing Firebase Authentication Users (Optional)
    description: >-
      Creates a Dogen Application Platform account document for each existing user.  
      This facilitates user management.  By default each user will receive a role of 
      'registered'.  If you're not sure, leave this as "No".
    type: select
    options:
      - label: Yes
        value: true
      - label: No
        value: false
    default: false
    required: false

  - param: FIREBASE_CONFIG_API_KEY
    label: Firebase Config API Key (Required)
    description: >-
      The API Key for the Dogen app to connect to your Firebase project.  (You 
      will need to create a new Web App in your Firebase project to obtain one.)
    type: string
    required: true

  - param: FIREBASE_CONFIG_APP_ID
    label: Firebase Config App ID (Required)
    description: >-
      The App ID for the Dogen app connecting to your Firebase project.  (You 
      will need to create a new Web App under your Firebase project to obtain one.)
    type: string
    required: true

  - param: FIREBASE_CONFIG_MESSAGING_SENDER_ID
    label: Firebase Config Messaging Sender ID (Required)
    description: >-
      The Messenger Sender ID for the Dogen app to connect to your Firebase 
      project.  (You will need to create a new Web App in your Firebase project to 
      obtain one.)
    type: string
    required: true

  - param: FIREBASE_CONFIG_AUTH_DOMAIN
    label: Firebase Config Auth Domain (Required)
    description: >-
      The Auth Domain for the Dogen app to connect to your Firebase project.  (You 
      will need to create a new Web App in your Firebase project to obtain one.)
    type: string
    required: true

lifecycleEvents:
  onInstall:
    function: runInstall
    processingMessage: Running installation script...
  onUpdate:
    function: runInstall
    processingMessage: Updating extension...
  onConfigure:
    function: runInstall
    processingMessage: Updating extension configuration...
  