# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: dogen-ap  # Identifier for your extension
version: 0.0.3  # Follow semver versioning
specVersion: v1beta  # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Generate a custom Firestore Application Platform

# Brief description of the task your extension performs (~1 sentence)
description: >-
  Adds support for Dogen Application Platform, which allows you to define schemas and validation rules for all your collections. For more information visit https://www.dogen.io

license: Apache-2.0  # https://spdx.org/licenses/

# Public URL for the source code of your extension
sourceUrl: https://github.com/typicalday/dogen-firebase-extensions/dogen-ap

# Specify whether a paid-tier billing plan is required to use your extension.
# Learn more in the docs: https://firebase.google.com/docs/extensions/reference/extension-yaml#billing-required-field
billingRequired: false

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field

# In a `roles` field, list any IAM access roles required for your extension to operate.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#roles-field
roles:
  - role: datastore.owner
    reason: Allows the extension to read and create documents in Firestore.
      
# In the `resources` field, list each of your extension's functions, including the trigger for each function.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#resources-field
resources:
  - name: onUserCreate
    type: firebaseextensions.v1beta.function
    description: >-
      Auth triggered function that creates a new accounts collection document for the user.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.create
        resource: projects/${PROJECT_ID}
      runtime: "nodejs16"
  - name: onUserDelete
    type: firebaseextensions.v1beta.function
    description: >-
      Auth triggered function that deletes an existing accounts collection document from the deleted user.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.delete
        resource: projects/${PROJECT_ID}
      runtime: "nodejs16"
  - name: backfillExistingUsers
    type: firebaseextensions.v1beta.function
    description: >-
      Cloud task triggered function which backfills existing users in batches into the accounts collection.
    properties:
      location: ${LOCATION}
      taskQueueTrigger: {}
  - name: onAccountCreate
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore triggered function which creates an Auth user from the corresponding accounts document.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.create
        resource: projects/${PROJECT_ID}/databases/(default)/documents/accounts/{userId}
      runtime: "nodejs16"
  - name: onAccountUpdate
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore triggered function which updates Auth user details from the corresponding accounts document changes.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.update
        resource: projects/${PROJECT_ID}/databases/(default)/documents/accounts/{userId}
      runtime: "nodejs16"
  - name: onGenerationWrite
    type: firebaseextensions.v1beta.function
    description: >-
      Firestore triggered function which triggers a Dogen AP Generation.
    properties:
      location: ${LOCATION}
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${PROJECT_ID}/databases/(default)/documents/generations/{generationId}
      runtime: "nodejs16"
  - name: processJob
    type: firebaseextensions.v1beta.function
    description: >-
      Https triggered function which runs background jobs for the client.
    properties:
      location: ${LOCATION}
      httpsTrigger: {}
      runtime: "nodejs16"
  - name: updateGenerationWebhook
    type: firebaseextensions.v1beta.function
    description: >-
      Https triggered function which acts a webhook to update the generation status from Dogen services.
    properties:
      location: ${LOCATION}
      httpsTrigger: {}
      runtime: "nodejs16"

# In the `params` field, set up your extension's user-configured parameters.
# Learn more in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml#params-field
params:
  - param: DOGEN_API_KEY
    label: Dogen API Key
    description: >-
      You can find your API key in the Dogen dashboard.
    type: string
    required: true

  - param: BACKFILL_EXISTING_USERS
    label: Backfill existing users
    description: >-
      If you enable this option, the extension will create Firestore user
      documents for all existing users right after installation is complete.
    type: select
    options:
      - label: Yes
        value: true
      - label: No
        value: false
    default: true
    required: true

  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true

lifecycleEvents:
  onInstall:
    function: backfillExistingUsers
    processingMessage: Processing Auth users into accounts collection...